if get_option('enable-autodiff')

  su2_met_src = ['SU2_MET.cpp']

  su2_cfd_obj_ad = su2_cfd_ad.extract_objects(['output_structure.cpp',
                       'output_cgns.cpp',
                       'output_fieldview.cpp',
                       'output_inria.cpp',
                       'output_paraview.cpp',
                       'output_physics.cpp',
                       'output_su2.cpp',
                       'output_tecplot.cpp',
                       'solver_direct_transition.cpp',
                       'solver_adjoint_turbulent.cpp',
                       'integration_structure.cpp',
                       'solver_direct_mean_fem.cpp',
                       'numerics_adjoint_mean.cpp',
                       'transport_model.cpp',
                       'numerics_adjoint_turbulent.cpp',
                       'fluid_model_pvdw.cpp',
                       'integration_time.cpp',
                       'fluid_model_pig.cpp',
                       'solver_direct_mean.cpp',
                       'iteration_structure.cpp',
                       'fluid_model_inc.cpp',
                       'solver_adjoint_mean.cpp',
                       'solver_adjoint_elasticity.cpp',
                       'solver_structure.cpp',
                       'numerics_direct_transition.cpp',
                       'solver_template.cpp',
                       'solver_direct_elasticity.cpp',
                       'definition_structure.cpp',
                       'numerics_direct_mean_inc.cpp',
                       'transfer_physics.cpp',
                       'solver_direct_turbulent.cpp',
                       'fluid_model.cpp',
                       'solver_direct_mean_inc.cpp',
                       'numerics_direct_mean.cpp',
                       'solver_direct_heat.cpp',
                       'numerics_direct_heat.cpp',
                       'fluid_model_ppr.cpp',
                       'numerics_direct_elasticity.cpp',
                       'numerics_direct_turbulent.cpp',
                       'numerics_direct_elasticity_linear.cpp',
                       'python_wrapper_structure.cpp',
                       'numerics_structure.cpp',
                       'numerics_template.cpp',
                       'solver_adjoint_discrete.cpp',
                       'numerics_direct_elasticity_nonlinear.cpp',
                       'error_estimation_structure.cpp',
                       'variables/CIncNSVariable.cpp',
                       'variables/CTransLMVariable.cpp',
                       'variables/CAdjEulerVariable.cpp',
                       'variables/CHeatFVMVariable.cpp',
                       'variables/CTurbVariable.cpp',
                       'variables/CAdjNSVariable.cpp',
                       'variables/CBaselineVariable.cpp',
                       'variables/CDiscAdjFEAVariable.cpp',
                       'variables/CDiscAdjFEABoundVariable.cpp',
                       'variables/CDiscAdjMeshVariable.cpp',
                       'variables/CDiscAdjMeshBoundVariable.cpp',
                       'variables/CFEABoundVariable.cpp',
                       'variables/CFEAFSIBoundVariable.cpp',
                       'variables/CDiscAdjVariable.cpp',
                       'variables/CTurbSAVariable.cpp',
                       'variables/CFEAVariable.cpp',
                       'variables/CMeshVariable.cpp',
                       'variables/CMeshBoundVariable.cpp',
                       'variables/CMeshElement.cpp',
                       'variables/CTurbSSTVariable.cpp',
                       'variables/CVariable.cpp',
                       'variables/CNSVariable.cpp',
                       'variables/CAdjTurbVariable.cpp',
                       'variables/CIncEulerVariable.cpp',
                       'variables/CEulerVariable.cpp',
                       'solvers/CMeshSolver.cpp',
                       'solvers/CDiscAdjMeshSolver.cpp',
                       'numerics/CFEAMeshElasticity.cpp',
                       'transfer/CTransfer.cpp',
                       'transfer/physics/CTransfer_BoundaryDisplacements.cpp',
                       'drivers/CDriver.cpp',
                       'drivers/CMultizoneDriver.cpp',
                       'drivers/CSinglezoneDriver.cpp',
                       'drivers/CDiscAdjSinglezoneDriver.cpp',
                       'drivers/CDummyDriver.cpp'])

  su2_met = executable('SU2_MET',
                       su2_met_src, 
                       install: true,
		     dependencies: [su2_deps, codi_dep, commonAD_dep], 
		     objects : su2_cfd_obj_ad,
		     cpp_args : [default_warning_flags, su2_cpp_args, codi_rev_args])

endif
